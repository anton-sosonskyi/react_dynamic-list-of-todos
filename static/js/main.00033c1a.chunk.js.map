{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","showTodo","selectedTodo","className","map","todo","id","title","completed","isTodoSelected","cn","type","onClick","TodoFilter","filterOption","setFilterOption","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterOption","Loader","TodoModal","closeModal","useState","user","setUser","userId","useEffect","getUser","selectedUser","catch","Error","href","email","name","App","setTodos","setSelectedTodo","todosFromServer","visibleTodos","useMemo","filter","searchQuery","toLowerCase","includes","trim","Active","Completed","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00033c1a.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  showTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, showTodo, selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n        const isTodoSelected = selectedTodo && selectedTodo.id === id;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={cn({ 'has-background-info-light': isTodoSelected })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !completed, 'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  showTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': isTodoSelected,\n                    'fa-eye': !isTodoSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  filterOption: string,\n  query: string,\n  setFilterOption: (filterOption: string) => void,\n  setQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterOption, setFilterOption, setQuery, query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filterOption}\n            onChange={event => {\n              setFilterOption(event.target.value);\n            }}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nexport enum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterOption, setFilterOption] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .catch(() => {\n        throw new Error('Todos loading is failed');\n      });\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const searchQuery = (\n        todo.title.toLowerCase().includes(query.trim().toLowerCase())\n      );\n\n      switch (filterOption) {\n        case FilterOption.Active:\n          return todo.completed === false && searchQuery;\n        case FilterOption.Completed:\n          return todo.completed === true && searchQuery;\n        default:\n          return searchQuery;\n      }\n    });\n  }, [todos, filterOption, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterOption={filterOption}\n                setFilterOption={setFilterOption}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  showTodo={(todo) => {\n                    setSelectedTodo(todo);\n                  }}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          closeModal={() => {\n            setSelectedTodo(null);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id, title, userId, completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(selectedUser => {\n        setUser(selectedUser);\n      })\n      .catch(() => {\n        throw new Error('User not found');\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}